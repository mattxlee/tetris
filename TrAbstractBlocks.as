package  {		public class TrAbstractBlocks implements ITrBlocks {				private var shapes: Array;		private var indexOfShapes: Number;		public function TrAbstractBlocks() {						// constructor code			shapes = new Array;			indexOfShapes = -1;		}				protected function addShape(shape: Array) {			shapes.push(shape);						// first shape, now the index set to 0, otherelse the index should be -1			if (shapes.length == 1) indexOfShapes = 0;		}				public function getNumOfCols() {			return shapes[indexOfShapes][0].length;		}				public function getNumOfRows() {			return shapes[indexOfShapes].length;		}				public function getValue(i: Number, j: Number) {			return shapes[indexOfShapes][j][i];		}				public function turnLeft() {			++indexOfShapes;			if (indexOfShapes >= shapes.length) {				indexOfShapes = 0;			}		}				public function turnRight() {			--indexOfShapes;			if (indexOfShapes < 0) {				indexOfShapes = shapes.length - 1;			}		}			}	}